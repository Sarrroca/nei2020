{"version":3,"sources":["assets/app-img.png","assets/checked-tick.svg","assets/cross.svg","questions.js","assets/questions/01/q.png","assets/questions/01/a1.png","assets/questions/01/a2.png","assets/questions/01/a3.png","assets/questions/01/a4.png","assets/questions/02/q.png","assets/questions/02/a1.png","assets/questions/02/a2.png","assets/questions/02/a3.png","assets/questions/02/a4.png","App.js","reportWebVitals.js","index.js"],"names":["questionSet","questionText","questionImg","correctAnswer","answerOptions","img","isCorrect","answerExplain","App","useState","arr","size","shuffled","slice","i","length","j","Math","floor","random","temp","getRandomSubarray","questions","isStarted","setStarted","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","lastAnswer","setLastAnswer","showLastAnswer","setShowLastAnswer","className","src","tickImg","crossImg","onClick","nextQuestion","handleNextQuestionClick","map","answerOption","handleAnswerOptionClick","style","backgroundImage","appImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1034b326.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/app-img.2eb378ad.png\";","export default __webpack_public_path__ + \"static/media/checked-tick.88f7ca27.svg\";","export default __webpack_public_path__ + \"static/media/cross.64ac5b6d.svg\";","import q01q  from './assets/questions/01/q.png';\nimport q01a1 from './assets/questions/01/a1.png';\nimport q01a2 from './assets/questions/01/a2.png';\nimport q01a3 from './assets/questions/01/a3.png';\nimport q01a4 from './assets/questions/01/a4.png';\nimport q02q  from './assets/questions/02/q.png';\nimport q02a1 from './assets/questions/02/a1.png';\nimport q02a2 from './assets/questions/02/a2.png';\nimport q02a3 from './assets/questions/02/a3.png';\nimport q02a4 from './assets/questions/02/a4.png';\n\nconst questionSet = [\n  {\n    questionText: 'Identifica qual a imagem correspondente a um meio urbano.',\n    questionImg: q01q,\n    correctAnswer: 1,\n      answerOptions: [\n        { img: q01a1, isCorrect: false },\n        { img: q01a2, isCorrect: true },\n        { img: q01a3, isCorrect: false },\n        { img: q01a4, isCorrect: false },\n    ],\n    answerExplain: 'A grande densidade de construção faz com que os telhados dos edifícios causem múltiplas reflexões do sinal de radar do satélite provocando o espalhamento do sinal. Ainda assim é possível identificar as ruas da cidade.',\n  },\n  {\n    questionText: 'Identifica qual a imagem correspondente a um meio rural.',\n    questionImg: q02q,\n    correctAnswer: 3,\n      answerOptions: [\n        { img: q02a1, isCorrect: false },\n        { img: q02a2, isCorrect: false },\n        { img: q02a3, isCorrect: false },\n        { img: q02a4, isCorrect: true },\n    ],\n    answerExplain: 'Várias parcelas com diferentes cultivos mostram zonas com diferentes tons de cinzento. As zonas de cultivos estão próximas de fontes de água, tais como rios para irrigação dos campos de cultivo. É possível corresponder o tom de cada parcela de cultivo a uma determinada plantação. Esta observação permite avaliar a ocupação dos solos remotamente e até o desenvolvimento de algumas culturas (maturação e ataque de pragas).',\n  },\n];\n\nexport default questionSet;","export default __webpack_public_path__ + \"static/media/q.1737a19b.png\";","export default __webpack_public_path__ + \"static/media/a1.a2beeb21.png\";","export default __webpack_public_path__ + \"static/media/a2.12523243.png\";","export default __webpack_public_path__ + \"static/media/a3.a66528bc.png\";","export default __webpack_public_path__ + \"static/media/a4.8fccfc55.png\";","export default __webpack_public_path__ + \"static/media/q.23f67a33.png\";","export default __webpack_public_path__ + \"static/media/a1.a2beeb21.png\";","export default __webpack_public_path__ + \"static/media/a2.12523243.png\";","export default __webpack_public_path__ + \"static/media/a3.a66528bc.png\";","export default __webpack_public_path__ + \"static/media/a4.8fccfc55.png\";","import './App.css';\nimport appImg from './assets/app-img.png';\nimport tickImg from './assets/checked-tick.svg';\nimport crossImg from './assets/cross.svg';\nimport questionSet from './questions';\nimport React, { useState } from 'react';\n\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0)\n  for(let i = shuffled.length - 1; i > 0; i--){\n    const j = Math.floor(Math.random() * i)\n    const temp = shuffled[i]\n    shuffled[i] = shuffled[j]\n    shuffled[j] = temp\n  }\n  return shuffled.slice(0, size);\n}\n\nfunction App() {\n  const numQuestions = 2;\n  \n  const [questions] = useState(getRandomSubarray(questionSet, numQuestions));\n\n  const [isStarted, setStarted] = useState(false);\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [lastAnswer, setLastAnswer] = useState(false);\n  const [showLastAnswer, setShowLastAnswer] = useState(false);\n\n\tconst handleAnswerOptionClick = (answerOption) => {\n    setShowLastAnswer(true);\n    setLastAnswer(answerOption);\n\t\tif (answerOption.isCorrect) {\n      setScore(score + 1);\n    }\n  };\n  \n  const handleNextQuestionClick = () => {\n    setShowLastAnswer(false);\n\n    const nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n  };\n\n  if (isStarted) {\n    if (showLastAnswer) {\n      return (\n        <div className='app'>\n          <div className='question-section'>\n            <div className='question-count'>\n              <span>Pergunta {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className='question-text'>{questions[currentQuestion].questionText}</div>\n            <div className='show-answer'>\n              <div className='show-answer-imgs'>\n              {lastAnswer.isCorrect ? (\n                <>\n                  <div className='question-img'>\n                    <img className='correct' src={questions[currentQuestion].answerOptions[questions[currentQuestion].correctAnswer].img} />\n                  </div>\n                  <div className='question-img'>\n                    <img className='tick' src={tickImg} />\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className='question-img'>\n                    <img src={questions[currentQuestion].answerOptions[questions[currentQuestion].correctAnswer].img} />\n                  </div>\n                  <div className='question-img'>\n                    <img className='incorrect' src={lastAnswer.img} />\n                  </div>\n                  <div className='question-img'>\n                    <img className='cross' src={crossImg} />\n                  </div>\n                </>\n              )}\n              </div>\n              <div className='show-answer-explain'>\n                <div className='show-answer-text'>\n                  {questions[currentQuestion].answerExplain}\n                </div>\n                <div className='question-img'>\n                  <img src={lastAnswer.img} />\n                </div>\n              </div>\n              \n            </div>\n          </div>\n          <div className='answer-section'>\n            <button onClick={() => handleNextQuestionClick()}>\n              {currentQuestion + 1 < questions.length ? (\n                <>Pr&oacute;xima pergunta!</>\n              ) : (\n                <>Ver pontua&ccedil;&atilde;o!</>\n              )}\n              \n            </button>\n          </div>\n        </div>\n      );\n    }\n    else {\n      if (showScore) {\n        return (\n          <div className='app'>\n            <div className='score-section'>\n              {score > questions.length/2 &&\n                <>Parab&eacute;ns!</>\n              } Acertaste {score} em {questions.length}!\n            </div>\n          </div>\n        );\n      }\n      else {\n        return (\n          <div className='app'>\n            <div className='question-section'>\n              <div className='question-count'>\n                <span>Pergunta {currentQuestion + 1}</span>/{questions.length}\n              </div>\n              <div className='question-img'>\n                <img src={questions[currentQuestion].questionImg} />\n              </div>\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\n            </div>\n            <div className='answer-section'>\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\n                <button className='answer-choice' onClick={() => handleAnswerOptionClick(answerOption)} style={{backgroundImage: `url(${answerOption.img})`}} />\n              ))}\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n  else {\n    return (\n      <>\n        <div className='app'>\n          <div className='question-section'>\n            <div className='question-count'>\n              <span>Bem-vindo ao quiz V&ecirc; a Terra!</span>\n            </div>\n            <div className='question-text'>\n              Aqui vais poder testar os teus conhecimentos sobre a forma como os satélites veem a Terra. Os satélites são muito úteis porque nos permitem obter imagens da Terra, no entanto, eles não veem a Terra como nós. Há várias tecnologias de captura de imagem que fazem com que as imagens de satélite sejam diferentes das fotografias que conhecemos. Achas que consegues adivinhar que imagem de satélite corresponde a que zona?\n            </div>\n          </div>\n          <div className='answer-section'>\n            <button onClick={() => setStarted(true)}>Começar!</button>\n          </div>\n        </div>\n        <img className='app-img' src={appImg} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}